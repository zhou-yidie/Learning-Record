#pragma GCC optimize(2)
#include <bits/stdc++.h>

#define start ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)

using namespace std;
int T = 1;
// const double esp = 1e-7;

double go(double nn, double p, double v) {
    double res = (min(p, nn - p) + nn) / v;
    return res;
}

int main() {
    start;
    cin >> T;
    while (T--) {
        double n, p1, v1, p2, v2;
        cin >> n >> p1 >> v1 >> p2 >> v2;
        if (p1 > p2) {
            swap(p1, p2);
            swap(v1, v2);
        }
        double ans1 = min(go(n, p1, v1), go(n, p2, v2));
        double ans2 = max((n - p1) / v1, p2 / v2);
        double l = p1, r = p2, t1, t2, mid;
//        for(double i = 1; i <= 99; i++){
//        	t1 = go(i, p1, v1);
//            t2 = go(n - i, n - p2, v2);
//            //cout << "i = " <<i << " ans = " << max( t1 , t2 )  << endl;
//		}
        int cnt = 1000;
        do {
            mid = (l + r) / 2.0;
            t1 = go(mid, p1, v1);
            t2 = go(n - mid, n - p2, v2);
            if (t1 > t2) r = mid;
            else l = mid;
            //cout << "mid = " << mid << endl;
            //cout << " ans = " << max( t1 , t2 ) << endl;
        } while (--cnt);//abs(t1 - t2) > esp
        double ans3 = max(t1, t2);
        
        cout << fixed << setprecision(10) << min(min(ans1, ans2), ans3) << '\n';
    }
    return 0;
}
